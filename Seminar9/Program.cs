Console.Clear();

// // Факториал

// // Как работает рекурсия - наглядно

// int i = 0;
// Factorial(4);

// int Factorial(int n)
// {
//     int result;
//     if (n == 1)
//     {
//         result = 1;
//         Console.WriteLine($"Шаг рекурсии {i++}, результат {result} - базовый вариант."); Шаг рекурсии 3
//         return result;
//     }
//     else
//     {
//         Console.WriteLine($"Шаг рекурсии {i++}"); // Шаг рекурсии 0, 1, 2
//         result = n * Factorial(n-1);
//         // -------------------------------------------// пока идет рекурсивный вызов функции (до достижения базового варианта) алгоритм дальше не идет
//         Console.WriteLine($"Шаг рекурсии {i++}, результат {result}"); // Шаг рекурсии 4, 5, 6 (после достижения базового варианте происходит возврат значений)
//         return result;
//     }
// }

////Задача 63: Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от 1 до N.
////N = 6 --> "1, 2, 3, 4, 5"

// Console.Write($"Введите N ");
// int n = int.Parse(Console.ReadLine());

// Console.Write(ToN(n));

// string ToN(int n)
// {
//     if (n==1) return $"{n} ";
//     return ToN(n - 1) + $"{n} ";
// }



// Задача 65: Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N.
// M = 4, N = 8 --> "4, 6, 7, 8"


// // НЕ РАБОТАЕТ!
// Console.Write($"Введите N ");
// int n = int.Parse(Console.ReadLine());
// Console.Write($"Введите M ");
// int m = int.Parse(Console.ReadLine());

// Console.Write(ToN(n, m));

// string ToN(int n, int m)
// {
//     if (n==1) return $"{n} ";
//     return ToN(n - 1) + $"{n} ";
// }

// Задача 67: Напишите программу, которая будет принимать на вход число и возвращать сумму его цифр
// 453 -> 12


// Задача 69: Напишите программу, которая на вход принмает 2 числа A и B, и возводит число A в степень B с помощью рекурсии
// А=3 В=5 A^B=243